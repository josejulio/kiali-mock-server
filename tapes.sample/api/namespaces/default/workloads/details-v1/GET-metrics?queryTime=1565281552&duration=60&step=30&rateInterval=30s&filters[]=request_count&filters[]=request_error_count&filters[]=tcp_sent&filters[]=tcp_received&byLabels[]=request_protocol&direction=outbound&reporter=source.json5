{
    meta: {
        createdAt: '2019-08-08T16:25:52.433Z',
        host: 'https://192.168.99.100:31385/kiali',
        resHumanReadable: true,
    },
    req: {
        url: '/api/namespaces/default/workloads/details-v1/metrics?queryTime=1565281552&duration=60&step=30&rateInterval=30s&filters[]=request_count&filters[]=request_error_count&filters[]=tcp_sent&filters[]=tcp_received&byLabels[]=request_protocol&direction=outbound&reporter=source',
        method: 'GET',
        headers: {
            'x-forwarded-host': 'localhost:3000',
            'x-forwarded-proto': 'http',
            'x-forwarded-port': '3000',
            'x-forwarded-for': '127.0.0.1',
            cookie: '_ga=GA1.1.1514412781.1557421740; Webstorm-a9376004=b9c98f11-f6b4-4bb3-84c3-0983d04fd04e',
            'accept-language': 'en,en-US;q=0.9,es-419;q=0.8,es;q=0.7',
            referer: 'http://localhost:3000/console/graph/node/namespaces/default/applications/details/versions/v1?edges=noEdgeLabels&layout=dagre&injectServiceNodes=true&graphType=versionedApp&duration=60&pi=0&unusedNodes=true&namespaces=default',
            'content-type': 'application/json;charset=utf-8',
            'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36',
            'x-auth-type-kiali-ui': '1',
            accept: 'application/json, text/plain, */*',
            connection: 'close',
        },
        body: '',
    },
    res: {
        status: 200,
        headers: {
            'content-type': [
                'application/json',
            ],
            vary: [
                'Accept-Encoding',
            ],
            date: [
                'Thu, 08 Aug 2019 16:25:52 GMT',
            ],
            'content-length': [
                '149',
            ],
            connection: [
                'close',
            ],
        },
        body: {
            metrics: {
                request_count: {
                    matrix: [],
                },
                request_error_count: {
                    matrix: [],
                },
                tcp_received: {
                    matrix: [],
                },
                tcp_sent: {
                    matrix: [],
                },
            },
            histograms: {},
        },
    },
}